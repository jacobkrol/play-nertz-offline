{"version":3,"sources":["components/Header/index.js","components/Header/Header.js","components/Login/index.js","components/Login/Login.js","components/Lobby/LobbyUser.js","components/Lobby/index.js","components/Lobby/Lobby.js","components/Countdown/index.js","components/Countdown/Countdown.js","components/Game/Card/index.js","components/Game/Card/Card.js","components/Game/Lake/index.js","components/Game/Lake/Lake.js","components/Game/River/index.js","components/Game/River/River.js","components/Game/Nertz/index.js","components/Game/Nertz/Nertz.js","components/Game/Stream/index.js","components/Game/Stream/Stream.js","components/Game/logic.js","components/Game/index.js","components/Game/Game.js","components/CPUGame/index.js","components/CPUGame/CPUGame.js","components/Join/index.js","components/Join/Join.js","components/Scoreboard/index.js","components/Scoreboard/Scoreboard.js","components/Popup/index.js","components/Popup/Popup.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","props","id","name","Login","useState","setName","type","placeholder","onChange","evt","target","value","toUpperCase","replace","slice","onClick","length","handleLogin","LobbyUser","className","Lobby","isReady","setIsReady","users","map","u","i","key","handleReady","Countdown","text","Card","card","suit","color","Number","String","getTextFromValue","flashTimeout","useRef","cardId","useMemo","user","useEffect","source","document","getElementById","classList","add","current","setTimeout","remove","clearTimeout","handleClick","style","title","Lake","height","scrollHeight","maxHeight","lake","pile","River","Array","a","r","river","Nertz","nertz","Stream","streamPileSize","stream","streamIndex","console","log","nextStream","get_deck","deck","cards","index","randint","chosen","push","splice","solitaire_stack","bottom","top","lake_stack","n","Math","floor","random","Game","setRiver","setNertz","setStream","setStreamIndex","setStreamPileSize","selected","setSelected","score","setScore","updateScore","updateNertz","newLake","result","removeOld","autoRemove","unselect","selectedPile","filter","includes","selectedStack","indexOf","r0","r1","r2","fillBlank","forEach","newRiver","c","j","valid","select","undefined","newStream","res","pos","stack","newR","newStreamIndex","min","newStreamPileSize","handlePause","isPaused","toggle","CPUGame","brainInterval","difficulty","delay","pNertz","offset","setInterval","action","nertz_river","nertz_lake","river_river","river_lake","stream_river","stream_update","stream_lake","clearInterval","moves","k","concat","fill_river","updateCPUScore","get_lake","pop","updateCPUNertz","Join","numCPUs","setNumCPUs","throwPopup","diff","handleCreate","Scoreboard","leaderboard","scoreUpdate","scores","change","lb","Object","keys","update","prev","total","get_leaderboard","results","nertzPts","scoreText","get_results","gameCount","Popup","handleClose","App","state","isJoined","isLoggedIn","isRunning","isLocked","CPUdiff","countdown","countdownTimeout","popup","lastLake","lastNertz","lastCPULake","lastCPUNertz","endGame","newScores1","setState","newValue","newCPULake","newCPUNertz","alert","newTimeout","timers","blank0Arr","from","blank13Arr","readyUsers","this","timeout","React","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","StrictMode","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b5522604.chunk.js","sourcesContent":["import Header from './Header';\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './Header.css';\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <div id=\"header\">\r\n            <h1>\r\n                <span>Nertz</span>\r\n                {props.name\r\n                    ? <span>{props.name}</span>\r\n                    : null\r\n                }\r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\n","import Login from './Login';\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport './Login.css';\r\n\r\nexport default function Login(props) {\r\n    const [name, setName] = useState('');\r\n    return (\r\n        <div id=\"login\">\r\n            <div>\r\n                <p id=\"login-announcement\">ENTER A USERNAME TO BEGIN</p>\r\n                <input type=\"text\" name=\"name\" placeholder=\"USERNAME\" onChange={(evt) => setName(evt.target.value.toUpperCase().replace(/([^A-Z\\s_\\d]|\\s(?=\\s))/g,'').slice(0,10))} value={name} />\r\n                <input type=\"button\" onClick={() => name.length ? props.handleLogin(name) : null} value=\"SUBMIT\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './LobbyUser.css';\r\n\r\nexport default function LobbyUser(props) {\r\n    return (\r\n        <div className=\"lobby-user\">\r\n            <p>{props.name}</p>\r\n        </div>\r\n    )\r\n}\r\n","import Lobby from './Lobby';\r\n\r\nexport default Lobby;\r\n","import React, { useState } from 'react';\r\nimport './Lobby.css';\r\nimport LobbyUser from './LobbyUser';\r\n\r\nexport default function Lobby(props) {\r\n    const [isReady, setIsReady] = useState(false);\r\n    const handleReady = () => {\r\n        props.handleReady(!isReady);\r\n        setIsReady(!isReady);\r\n    }\r\n\r\n    return (\r\n        <div id=\"lobby-container\">\r\n            <div id=\"lobby-announcement\">\r\n                <p>We're waiting to get started!</p>\r\n            </div>\r\n            <div id=\"lobby-user-container\">\r\n                {props.users.map((u,i) => <LobbyUser key={i} name={u} />)}\r\n            </div>\r\n            <div id=\"lobby-ready-container\">\r\n                <div id=\"lobby-ready-button\" className={isReady ? \"ready\" : \"unready\"} onClick={() => handleReady()}>\r\n                    <p>{isReady ? \"CANCEL\" : \"READY\"}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import Countdown from './Countdown';\r\n\r\nexport default Countdown;\r\n","import React from 'react';\r\nimport './Countdown.css';\r\n\r\nexport default function Countdown(props) {\r\n    return (\r\n        <div id=\"countdown-container\">\r\n            <div id=\"countdown-circle\">\r\n                <h1 id=\"countdown-text\">{props.text}</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import Card from './Card';\r\n\r\nexport default Card;\r\n","import React, { useEffect, useMemo, useRef } from 'react';\r\nimport './Card.css';\r\nimport { GiSpades, GiDiamonds, GiHearts, GiClubs } from 'react-icons/gi';\r\n\r\nconst getTextFromValue = (value) => {\r\n    //convert Ace, Jack, Queen, King to letters\r\n    switch(Number(value)) {\r\n        case 0:\r\n            return '';\r\n        case 1:\r\n            return 'A';\r\n        case 11:\r\n            return 'J';\r\n        case 12:\r\n            return 'Q';\r\n        case 13:\r\n            return 'K';\r\n        default:\r\n            return String(Number(value));\r\n    }\r\n}\r\n\r\nexport default function Card(props) {\r\n    const value = props.card.slice(0,2);\r\n    const suit = props.card.slice(2,3);\r\n    const color = props.card.slice(3,4);\r\n    const text = getTextFromValue(value);\r\n\r\n    const flashTimeout = useRef(null);\r\n\r\n    const cardId = useMemo(() => props.user ? props.card+\"-\"+props.user : props.card, [props.user, props.card]);\r\n\r\n    useEffect(() => {\r\n        if (props.source === \"lake\") {\r\n            const card = document.getElementById(cardId);\r\n            card.classList.add(\"flash\");\r\n            flashTimeout.current = setTimeout(() => {\r\n                card.classList.remove(\"flash\");\r\n            }, 800); // timeout must be >= animation-duration in Card.css\r\n\r\n            if (props.card.slice(0,2) === \"13\") {\r\n                card.classList.add(\"flipped\");\r\n            }\r\n        }\r\n\r\n        return () => {\r\n            clearTimeout(flashTimeout.current);\r\n        }\r\n    }, [props.card, props.source, cardId]);\r\n\r\n    return (\r\n        <div id={cardId} className=\"card-box\" onClick={() => props.user ? props.handleClick(props.card,props.user) : props.handleClick(props.card)}>\r\n            <div className=\"card\" style={{color: color === 'R' ? 'red' : color === 'B' ? 'black' : 'lime'}}>\r\n                <p>{text}</p>\r\n                {suit === 'H'\r\n                    ? <GiHearts title=\"hearts\"/>\r\n                    : suit === 'D'\r\n                        ? <GiDiamonds title=\"diamonds\" />\r\n                        : suit === 'S'\r\n                            ? <GiSpades title=\"spades\" />\r\n                            : suit === 'C'\r\n                                ? <GiClubs title=\"clubs\" />\r\n                                : <p></p>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import Lake from './Lake';\r\n\r\nexport default Lake;\r\n","import React, { useEffect } from 'react';\r\nimport './Lake.css';\r\nimport Card from '../Card';\r\n\r\nexport default function Lake(props) {\r\n    useEffect(() => {\r\n        const height = document.getElementById(\"lake-container\").scrollHeight;\r\n        document.getElementById(\"lake-container\").style.maxHeight = `${height}px`;\r\n    }, [props.lake.length]);\r\n\r\n    return (\r\n        <fieldset id=\"lake\"><legend id=\"lake-add\">Lake</legend>\r\n            <div id=\"lake-container\">\r\n                <>\r\n                {props.lake.map((pile,i) =>\r\n                    <Card key={i} card={pile[pile.length-1].card} user={pile[pile.length-1].user.replace(/\\s/g,'_')} handleClick={props.handleClick} source=\"lake\" />\r\n                )}\r\n                </>\r\n                <div id=\"ace-out\" onClick={() => props.handleClick('ace-out')}>\r\n                    <p>ACE OUT</p>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n    )\r\n}\r\n","import River from './River';\r\n\r\nexport default River;\r\n","import React from 'react';\r\nimport './River.css';\r\nimport Card from '../Card';\r\n\r\nexport default function River(props) {\r\n    return (\r\n        <fieldset id=\"river\"><legend>River</legend>\r\n            <div id=\"river-container\">\r\n                {[...Array(4)].map((a,r) =>\r\n                    <div key={r} className=\"river-pile\">\r\n                        {props.river[r].map((card,i) =>\r\n                            <Card key={i} card={card} handleClick={props.handleClick} />\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </fieldset>\r\n    )\r\n}\r\n","import Nertz from './Nertz';\r\n\r\nexport default Nertz;\r\n","import React from 'react';\r\nimport './Nertz.css';\r\nimport Card from '../Card';\r\n\r\nexport default function Nertz(props) {\r\n    return (\r\n        <fieldset id=\"nertz\"><legend>Nertz</legend>\r\n            <div id=\"nertz-container\">\r\n                <Card card={props.nertz[props.nertz.length-1]} handleClick={props.handleClick} />\r\n                <p>({props.nertz.length})</p>\r\n            </div>\r\n        </fieldset>\r\n    )\r\n}\r\n","import Stream from './Stream';\r\n\r\nexport default Stream;\r\n","import React from 'react';\r\nimport './Stream.css';\r\nimport Card from '../Card';\r\n\r\nexport default function Stream(props) {\r\n    return (\r\n        <fieldset id=\"stream\"><legend>Stream</legend>\r\n            <div id=\"stream-container\">\r\n                <div id=\"stream-cards\">\r\n                {[...Array(props.streamPileSize)].map((a,i) =>\r\n                    <Card key={i} card={props.stream[props.streamIndex+i]} handleClick={i === props.streamPileSize-1 ? props.handleClick : () => console.log(\"stream click\")} />\r\n                )}\r\n                </div>\r\n                <div id=\"next-stream\" onClick={() => props.nextStream()}>\r\n                    <p>NEXT</p>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n    )\r\n}\r\n","export function get_deck() {\r\n    let deck = [],\r\n        cards = ['01HR','02HR','03HR','04HR','05HR','06HR','07HR',\r\n                 '08HR','09HR','10HR','11HR','12HR','13HR',\r\n                 '01SB','02SB','03SB','04SB','05SB','06SB','07SB',\r\n                 '08SB','09SB','10SB','11SB','12SB','13SB',\r\n                 '01DR','02DR','03DR','04DR','05DR','06DR','07DR',\r\n                 '08DR','09DR','10DR','11DR','12DR','13DR',\r\n                 '01CB','02CB','03CB','04CB','05CB','06CB','07CB',\r\n                 '08CB','09CB','10CB','11CB','12CB','13CB'];\r\n    while(cards.length) {\r\n        let index = randint(cards.length),\r\n            chosen = cards[index];\r\n        deck.push(chosen);\r\n        cards.splice(index,1);\r\n    }\r\n    if(deck.length === 52) {\r\n        return deck;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function solitaire_stack(bottom, top) {\r\n    if(Number(top.slice(0,2))+1 !== Number(bottom.slice(0,2))) {\r\n        //number alignment\r\n        return false;\r\n    } else if(top.slice(3,4) === bottom.slice(3,4)) {\r\n        //alternating suit color\r\n        return false;\r\n    } else {\r\n        //nothing failed tests\r\n        return true;\r\n    }\r\n}\r\n\r\nexport function lake_stack(bottom, top) {\r\n    if(Number(top.slice(0,2))-1 !== Number(bottom.slice(0,2))) {\r\n        //number alignment\r\n        return false;\r\n    } else if(top.slice(2,3) !== bottom.slice(2,3)) {\r\n        //same suit\r\n        return false;\r\n    } else {\r\n        //nothing failed tests\r\n        return true;\r\n    }\r\n}\r\n\r\nexport function randint(n) {\r\n    return Math.floor(Math.random()*n);\r\n}\r\n","import Game from './Game';\r\n\r\nexport default Game;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Game.css';\r\nimport Lake from './Lake';\r\nimport River from './River';\r\nimport Nertz from './Nertz';\r\nimport Stream from './Stream';\r\nimport { get_deck, solitaire_stack, lake_stack } from './logic.js';\r\nimport { FaPause, FaPlay } from \"react-icons/fa\";\r\n\r\nexport default function Game(props) {\r\n    //define non-stateful variables\r\n    const deck = get_deck();\r\n    // let score = 0;\r\n\r\n    //define stateful variables\r\n    const [river, setRiver] = useState([ [deck[0]], [deck[1]], [deck[2]], [deck[3]] ]);\r\n    const [nertz, setNertz] = useState(deck.slice(4,17)); // 4,17\r\n    const [stream, setStream] = useState(deck.slice(17,53)); //17,53\r\n    const [streamIndex, setStreamIndex] = useState(0);\r\n    const [streamPileSize, setStreamPileSize] = useState(3);\r\n    const [selected, setSelected] = useState(null);\r\n    const [score, setScore] = useState(0);\r\n    // const [isStalled, setIsStalled] = useState(false);\r\n    const { updateScore, updateNertz } = props;\r\n\r\n    useEffect(() => {\r\n        updateScore(score);\r\n    }, [updateScore,score]);\r\n    useEffect(() => {\r\n        updateNertz(nertz.length);\r\n    }, [updateNertz,nertz]);\r\n\r\n    const handleClick = (card, user='') => {\r\n        if(card === 'ace-out' && (selected && selected.slice(0,2) === '01')) {\r\n            //if ace selected and click on 'ace out'\r\n            props.newLake([...props.lake, [{card:selected,user:props.name}]]);\r\n            const result = removeOld(selected);\r\n            autoRemove(result);\r\n            unselect(selected);\r\n            setScore(score+1);\r\n\r\n        } else if(card === 'ace-out') {\r\n            //if click on 'ace out' without an ace selected\r\n            // *** INTENTIONALLY DO NOTHING ***\r\n\r\n        } else if(card.slice(0,2) === '00' && selected) {\r\n            //if click on blank with a selected card\r\n\r\n            //save selected stack\r\n            const selectedPile = [...river].filter(pile => pile.includes(selected));\r\n            const selectedStack = selectedPile.length\r\n                ? selectedPile[0].slice(selectedPile[0].indexOf(selected),selectedPile[0].length)\r\n                : [selected];\r\n\r\n            //remove old stack\r\n            const r0 = [...river];\r\n            const result = removeOld(selected);\r\n            if(result[0] === 'river') {\r\n                const r1 = result[1];\r\n                const r2 = fillBlank(card.slice(2,3),selectedStack,r1);\r\n                setRiver(r2);\r\n            } else {\r\n                const r1 = fillBlank(card.slice(2,3),selectedStack,r0);\r\n                setRiver(r1);\r\n                autoRemove(result);\r\n            }\r\n            unselect(selected);\r\n\r\n        } else if(card.slice(0,2) === '00') {\r\n            //if click on blank without selected card\r\n            // *** INTENTIONALLY DO NOTHING ***\r\n\r\n        } else if(selected === card) {\r\n            //if click on same card\r\n            unselect(card);\r\n\r\n        } else if(selected && selected !== card) {\r\n            //if click on different card than selected\r\n\r\n            //check if new click is in lake\r\n            props.lake.forEach((pile,i) => {\r\n                if(pile[pile.length-1].card === card && pile[pile.length-1].user === user) {\r\n                    //if you can stack them, stack them\r\n                    if(lake_stack(card,selected)) {\r\n                        let newLake = [...props.lake];\r\n                        newLake[i].push({card:selected,user:props.name});\r\n                        props.newLake(newLake);\r\n                        const result = removeOld(selected);\r\n                        autoRemove(result);\r\n                        unselect(selected);\r\n                        setScore(score+1);\r\n                    }\r\n                }\r\n            });\r\n\r\n            //check if new click is in river\r\n            river.forEach((pile,i) => {\r\n                if(pile[pile.length-1] === card) {\r\n                    //if you can stack them, stack them\r\n                    if(solitaire_stack(card,selected)) {\r\n                        //save selected stack\r\n                        const selectedPile = [...river].filter(pile => pile.includes(selected));\r\n                        const selectedStack = selectedPile.length\r\n                            ? selectedPile[0].slice(selectedPile[0].indexOf(selected),selectedPile[0].length)\r\n                            : [selected];\r\n\r\n\r\n                        //remove old stack\r\n                        const result = removeOld(selected);\r\n                        let newRiver = [...river];\r\n                        if(result[0] === \"river\") {\r\n                            newRiver = result[1];\r\n                        } else {\r\n                            autoRemove(result);\r\n                        }\r\n\r\n                        //push selected stack\r\n                        selectedStack.forEach((c,j) => {\r\n                            newRiver[i].push(c);\r\n                        });\r\n                        //update river and selected vars\r\n                        setRiver(newRiver);\r\n                        unselect(selected);\r\n                    }\r\n                }\r\n            });\r\n\r\n        } else {\r\n            //in all else, see if exists outside lake\r\n            let valid = false;\r\n            river.forEach((pile, i) => {\r\n                pile.forEach((c, j) => {\r\n                    if(c===card) {\r\n                        valid = true;\r\n                    }\r\n                });\r\n            });\r\n            if(nertz[nertz.length-1] === card) valid = true;\r\n            if(stream[streamIndex+streamPileSize-1] === card) valid = true;\r\n\r\n            if(valid) select(card);\r\n        }\r\n    }\r\n\r\n    const select = (card) => {\r\n        const c = document.getElementById(card);\r\n        c.className += \" selected\";\r\n        setSelected(card);\r\n    }\r\n\r\n    const unselect = (card) => {\r\n        const c = document.getElementById(card);\r\n        c.className = \"card-box\";\r\n        setSelected(undefined);\r\n    }\r\n\r\n    const removeOld = (card) => {\r\n        if(card === nertz[nertz.length-1]) {\r\n            //if top of nertz pile\r\n            const newNertz = [...nertz.slice(0,nertz.length-1)];\r\n            return [\"nertz\",newNertz];\r\n        } else if(card === stream[streamIndex+streamPileSize-1]) {\r\n            //if top of stream pile\r\n            const newStream = [\r\n                ...stream.slice(0,streamIndex+streamPileSize-1),\r\n                ...stream.slice(streamIndex+streamPileSize,stream.length)\r\n            ];\r\n            setStreamPileSize(streamPileSize-1);\r\n            if(!streamPileSize) nextStream();\r\n            return [\"stream\",newStream];\r\n        } else {\r\n            let newRiver = [...river];\r\n            river.forEach((pile,i) => {\r\n                pile.forEach((c,j) => {\r\n                    if(c === card) {\r\n                        newRiver[i] = [...pile.slice(0,j)];\r\n                        if(!newRiver[i].length) {\r\n                            newRiver[i] = ['00'+i+'X'];\r\n                        }\r\n                        // break;\r\n                    }\r\n                });\r\n            });\r\n            return [\"river\",newRiver];\r\n        }\r\n    }\r\n\r\n    const autoRemove = (res) => {\r\n        switch(res[0]) {\r\n            case 'river':\r\n                setRiver(res[1]);\r\n                break;\r\n            case 'nertz':\r\n                setNertz(res[1]);\r\n                break;\r\n            case 'stream':\r\n                setStream(res[1]);\r\n                break;\r\n            default:\r\n                console.log(\"unrecognized removal location\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    const fillBlank = (pos,stack,r) => {\r\n        let newR = [...r];\r\n        newR[pos] = [];\r\n        stack.forEach((c,i) => {\r\n            newR[pos].push(c);\r\n        });\r\n        return newR;\r\n    }\r\n\r\n    const nextStream = () => {\r\n        let newStreamIndex = streamIndex+Math.min(3,stream.length-streamIndex);\r\n        if(newStreamIndex >= stream.length) newStreamIndex=0;\r\n        setStreamIndex(newStreamIndex);\r\n        const newStreamPileSize = Math.min(3,stream.length-newStreamIndex);\r\n        setStreamPileSize(newStreamPileSize);\r\n        if(selected) unselect(selected);\r\n    }\r\n\r\n    const pauseGame = () => {\r\n        props.handlePause(!props.isPaused);\r\n        document.getElementById(\"game-pause-overlay\").classList.toggle(\"paused\");\r\n    }\r\n\r\n    return (\r\n        <div id=\"game\">\r\n            <div id=\"game-lake-row\">\r\n                <Lake lake={props.lake} handleClick={handleClick} />\r\n            </div>\r\n            <div id=\"game-player-row\">\r\n                <div id=\"game-player-row-1\">\r\n                    <River river={river} handleClick={handleClick} />\r\n                </div>\r\n                <div id=\"game-player-row-2\" className=\"flex-row\">\r\n                    <Nertz nertz={nertz.length > 0 ? nertz : ['00XX']} handleClick={handleClick} />\r\n                    <Stream stream={stream} handleClick={handleClick} streamIndex={streamIndex} streamPileSize={streamPileSize} nextStream={nextStream} />\r\n                </div>\r\n            </div>\r\n            <div id=\"game-pause\" onClick={pauseGame}>\r\n                {props.isPaused ? <FaPlay title=\"resume game\" /> : <FaPause title=\"pause game\" />}\r\n            </div>\r\n            <div id=\"game-pause-overlay\">\r\n                <p>GAME PAUSED</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import CPUGame from './CPUGame';\r\n\r\nexport default CPUGame;\r\n","import { useEffect, useRef } from 'react';\r\nimport {\r\n    randint,\r\n    get_deck,\r\n    solitaire_stack,\r\n    lake_stack\r\n} from '../Game/logic.js';\r\n\r\nexport default function CPUGame(props) {\r\n    const brainInterval = useRef(null);\r\n    const deck = get_deck();\r\n    const river = useRef([ [deck[0]], [deck[1]], [deck[2]], [deck[3]] ]);\r\n    const nertz = useRef(deck.slice(4,17));\r\n    const stream = useRef(deck.slice(17,53));\r\n    const streamIndex = useRef(0);\r\n    const streamPileSize = useRef(3);\r\n    const score = useRef(0);\r\n    const { difficulty } = props;\r\n\r\n    const action = (pNertz=1) => {\r\n        if(props.isPaused) return;\r\n\r\n        let action = false;\r\n        if(Math.random() < pNertz/3) {\r\n            switch(randint(2)) {\r\n                case 0:\r\n                    action = nertz_river();\r\n                    break;\r\n                case 1:\r\n                    action = nertz_lake();\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        } else {\r\n            switch(randint(4)) {\r\n                case 0:\r\n                    action = river_river();\r\n                    break;\r\n                case 1:\r\n                    action = river_lake();\r\n                    break;\r\n                case 2:\r\n                    action = stream_river();\r\n                    if(!action || streamPileSize.current === 0) {\r\n                        stream_update();\r\n                    }\r\n                    break;\r\n                case 3:\r\n                    action = stream_lake();\r\n                    if(!action || streamPileSize.current === 0) {\r\n                        stream_update();\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n        }\r\n\r\n        }\r\n    }\r\n    //start and clear brain interval\r\n    useEffect(() => {\r\n        let delay = 1,\r\n            pNertz = 1;\r\n        switch(Number(difficulty)) {\r\n            case 1:\r\n                delay = 2000;\r\n                pNertz = 0.4;\r\n                break;\r\n            case 2:\r\n                delay = 1600;\r\n                pNertz = 0.8;\r\n                break;\r\n            case 3:\r\n                delay = 1000;\r\n                pNertz = 1.0;\r\n                break;\r\n            case 4:\r\n                delay = 600;\r\n                pNertz = 1.2;\r\n                break;\r\n            default:\r\n                console.log(\"invalid difficulty selected\");\r\n                break;\r\n        }\r\n        const offset = setTimeout(() => {\r\n            brainInterval.current = setInterval(() => action(pNertz), delay);\r\n        }, Math.random()*delay);\r\n\r\n\r\n        return () =>  {\r\n            clearInterval(brainInterval.current);\r\n            clearTimeout(offset);\r\n        }\r\n    });\r\n\r\n    const river_river = () => {\r\n        let moves = [];\r\n        for(let i=0; i<4; i++) {\r\n            for(let j=0; j<4; j++) {\r\n                if(i===j) continue;\r\n                for(let k=0; k<river.current[i].length; k++) {\r\n                    if(solitaire_stack(\r\n                        river.current[j][river.current[j].length-1],\r\n                        river.current[i][k])) {\r\n                            moves.push([i,j,k]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if(moves.length) {\r\n            let chosen = moves[randint(moves.length)];\r\n            river.current[chosen[1]] = river.current[chosen[1]].concat(\r\n                                       river.current[chosen[0]].slice(\r\n                                       chosen[2],river.current[chosen[0]].length));\r\n            river.current[chosen[0]] = [];\r\n            fill_river();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const river_lake = () => {\r\n        for(let i=0; i<4; ++i) {\r\n            //move aces to lake\r\n            if(river.current[i][river.current[i].length-1].slice(0,2) === '01') {\r\n                score.current = score.current + 1;\r\n                props.updateCPUScore(props.id,score.current);\r\n                let newLake = props.get_lake();\r\n                newLake.push([{card:river.current[i].pop(),user:\"*\"+props.id}]);\r\n                props.newLake(newLake);\r\n                fill_river();\r\n                return true;\r\n            }\r\n\r\n            //move lake stack-ables\r\n            let newLake = props.get_lake();\r\n            for(let pile of newLake) {\r\n                if(lake_stack(pile[pile.length-1].card,\r\n                    river.current[i][river.current[i].length-1])) {\r\n                        score.current = score.current + 1;\r\n                        props.updateCPUScore(props.id,score.current);\r\n                        pile.push({card:river.current[i].pop(),user:\"*\"+props.id});\r\n                        fill_river();\r\n                        props.newLake(newLake);\r\n                        return true;\r\n                }\r\n\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const nertz_river = () => {\r\n        for(let pile of river.current) {\r\n            let bottom = pile[pile.length-1],\r\n                top = nertz.current[nertz.current.length-1];\r\n            if(solitaire_stack(bottom,top)) {\r\n                pile.push(nertz.current.pop());\r\n                props.updateCPUNertz(props.id,nertz.current.length);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const nertz_lake = () => {\r\n        //clear aces\r\n        if(nertz.current[nertz.current.length-1].slice(0,2) === '01') {\r\n            score.current = score.current + 1;\r\n            props.updateCPUScore(props.id,score.current);\r\n            let newLake = props.get_lake();\r\n            newLake.push([{card:nertz.current.pop(),user:\"*\"+props.id}]);\r\n            console.log(\"nertz pop:\",nertz.current.length,\"id:\",props.id);\r\n            props.updateCPUNertz(props.id,nertz.current.length);\r\n            props.newLake(newLake);\r\n            return true;\r\n        }\r\n        //idenfity other matches\r\n        let newLake = props.get_lake();\r\n        for(let pile of newLake) {\r\n            let bottom = pile[pile.length-1].card,\r\n                top = nertz.current[nertz.current.length-1];\r\n            if(lake_stack(bottom,top)) {\r\n                score.current = score.current + 1;\r\n                props.updateCPUScore(props.id,score.current);\r\n                pile.push({card:nertz.current.pop(),user:\"*\"+props.id});\r\n                props.newLake(newLake);\r\n                console.log(\"nertz pop:\",nertz.current.length,\"id:\",props.id);\r\n                props.updateCPUNertz(props.id,nertz.current.length);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const stream_river = () => {\r\n        if(streamPileSize.current === 0) {\r\n            stream_update();\r\n        }\r\n\r\n        const top = stream.current[streamIndex.current+streamPileSize.current-1];\r\n        for(let pile of river.current) {\r\n            if(solitaire_stack(pile[pile.length-1],top)) {\r\n                pile.push(top);\r\n                stream.current.splice(streamIndex.current+streamPileSize.current-1,1);\r\n                streamPileSize.current = streamPileSize.current - 1;\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    const stream_lake = () => {\r\n        if(streamPileSize.current === 0) {\r\n            stream_update();\r\n        }\r\n        const top = stream.current[streamIndex.current+streamPileSize.current-1];\r\n        if(top.slice(0,2) === '01') {\r\n            score.current = score.current + 1;\r\n            props.updateCPUScore(props.id,score.current);\r\n            let newLake = props.get_lake();\r\n            newLake.push([{card:top,user:\"*\"+props.id}]);\r\n            props.newLake(newLake);\r\n            stream.current.splice(streamIndex.current+streamPileSize.current-1,1);\r\n            streamPileSize.current = streamPileSize.current - 1;\r\n            return true;\r\n        }\r\n        let newLake = props.get_lake();\r\n        for(let pile of newLake) {\r\n            if(lake_stack(pile[pile.length-1].card,top)) {\r\n                score.current = score.current + 1;\r\n                props.updateCPUScore(props.id,score.current);\r\n                pile.push({card:stream.current.splice(streamIndex.current+streamPileSize.current-1,1)[0],user:\"*\"+props.id});\r\n                streamPileSize.current = streamPileSize.current - 1;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const fill_river = () => {\r\n        for(let i=0; i<4; ++i) {\r\n            if(river.current[i].length === 0) {\r\n                river.current[i] = [nertz.current.pop()];\r\n                console.log(\"nertz pop:\",nertz.current.length,\"id:\",props.id);\r\n                props.updateCPUNertz(props.id,nertz.current.length);\r\n            }\r\n        }\r\n    }\r\n\r\n    const stream_update = () => {\r\n        //update stream index\r\n        streamIndex.current += 3;\r\n        if(streamIndex.current >= stream.current.length) {\r\n            streamIndex.current = 0;\r\n        }\r\n\r\n        //update stream pile size\r\n        streamPileSize.current = Math.min(3,stream.current.length-streamIndex.current);\r\n    }\r\n\r\n    return null;\r\n\r\n}\r\n","import Join from './Join';\r\n\r\nexport default Join;\r\n","import React, { useState } from 'react';\r\nimport './Join.css';\r\n\r\nexport default function Join(props) {\r\n    const [numCPUs, setNumCPUs] = useState('');\r\n\r\n    return (\r\n        <div id=\"join\">\r\n            <div>\r\n                <div>\r\n                    <p id=\"create-announcement\">CONFIGURE YOUR GAME</p>\r\n                    <div>\r\n                        <input id=\"create-cpu-count\" type=\"text\" placeholder=\"# CPUs\" value={numCPUs} onChange={(evt) => setNumCPUs(evt.target.value.replace(/\\D/g,''))} />\r\n                        <select id=\"create-cpu-difficulty\">\r\n                            <option value=\"\">SELECT DIFFICULTY</option>\r\n                            <option value=\"1\">EASY</option>\r\n                            <option value=\"2\">MEDIUM</option>\r\n                            <option value=\"3\">HARD</option>\r\n                            <option value=\"4\">EXPERT</option>\r\n                        </select>\r\n                    </div>\r\n                    <input id=\"create-button\" type=\"button\" onClick={() => {\r\n                        if(!Number(numCPUs) || Number(numCPUs) > 8) {\r\n                            console.log(Number(numCPUs),Number(numCPUs) > 8);\r\n                            const text = <><span>Please enter a valid number of computers opponents</span><br /><span>(MIN 0, MAX 8)</span></>;\r\n                            props.throwPopup(text);\r\n                        } else if(document.getElementById('create-cpu-difficulty').value === '') {\r\n                            const text = <span>Please select a difficulty for the computer opponents</span>;\r\n                            props.throwPopup(text);\r\n                        } else {\r\n                            const diff = document.getElementById('create-cpu-difficulty').value;\r\n                            props.handleCreate(numCPUs,diff);\r\n                        }\r\n                    }} value=\"CREATE\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import Scoreboard from './Scoreboard';\r\n\r\nexport default Scoreboard;\r\n","import React, { useState } from 'react';\r\nimport './Scoreboard.css';\r\n\r\nfunction get_results(scoreUpdate) {\r\n    //fill result array with all score data\r\n    let res = [];\r\n    Object.keys(scoreUpdate).forEach((user,i) => {\r\n        //define values before appending for easier code comprehension\r\n        const lake = scoreUpdate[user].lake;\r\n        const nertz = scoreUpdate[user].nertz;\r\n        const nertzPts = -2*Number(scoreUpdate[user].nertz);\r\n        const score = Number(lake)-2*Number(nertz);\r\n        const scoreText = score < 0 ? String(score) : \"+\"+String(score);\r\n        //push player object to array\r\n        res.push({\r\n            name: user,\r\n            lake: lake,\r\n            nertz: nertz,\r\n            nertzPts: nertzPts,\r\n            score: score,\r\n            scoreText: scoreText\r\n        });\r\n    });\r\n    //organize game results by highest scores first\r\n    let change;\r\n    do {\r\n        change = false;\r\n        for(let i=0; i<res.length-1; i++) {\r\n            const score1 = res[i].score,\r\n                  score2 = res[i+1].score;\r\n            if(score1 < score2) {\r\n                //swap\r\n                [ res[i], res[i+1] ]=[ res[i+1], res[i] ];\r\n                //update change\r\n                change = true;\r\n            }\r\n        }\r\n    } while(change);\r\n    //return results\r\n    return res;\r\n}\r\n\r\nfunction get_leaderboard(scoreUpdate,scores) {\r\n    //fill leaderboard array with all score data\r\n    let lb = [];\r\n    Object.keys(scoreUpdate).forEach((user,i) => {\r\n        //define values before appending for easier code comprehension\r\n        const name = user;\r\n        const lake = Number(scoreUpdate[user].lake);\r\n        const nertz = Number(scoreUpdate[user].nertz);\r\n        const update = lake - 2*nertz;\r\n        const prev = scores[user] - update;\r\n        const total = scores[user];\r\n        //push player object to array\r\n        lb.push({\r\n            name: name,\r\n            prev: prev,\r\n            update: update,\r\n            total: total\r\n        });\r\n    });\r\n    //organize loaderboard by highest scores first\r\n    let change;\r\n    do {\r\n        change = false;\r\n        for(let i=0; i<lb.length-1; i++) {\r\n            const score1 = lb[i].total,\r\n                  score2 = lb[i+1].total;\r\n            if(score1 < score2) {\r\n                //swap\r\n                [ lb[i], lb[i+1] ]=[ lb[i+1], lb[i] ];\r\n                //update change\r\n                change = true;\r\n            }\r\n        }\r\n    } while(change);\r\n    //return leaderboard\r\n    return lb;\r\n}\r\n\r\nexport default function Scoreboard(props) {\r\n    const [isReady, setIsReady] = useState(false);\r\n    const handleReady = () => {\r\n        props.handleReady(!isReady);\r\n        setIsReady(!isReady);\r\n    }\r\n    const leaderboard = get_leaderboard(props.scoreUpdate,props.scores);\r\n    const results = get_results(props.scoreUpdate);\r\n\r\n    return (\r\n        <div id=\"scoreboard\">\r\n            <div>\r\n                <p className=\"scoreboard-title\">SCOREBOARD</p>\r\n            </div>\r\n            <div>\r\n                <p className=\"scoreboard-subtitle\">GAME {props.gameCount} RESULTS</p>\r\n                <table className=\"scoreboard-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <td>PLAYER</td>\r\n                            <td>LAKE</td>\r\n                            <td>(NERTZ)</td>\r\n                            <td>TOTAL</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {results.map((user,i) =>\r\n                            <tr key={i}>\r\n                                <td>{user.name}</td>\r\n                                <td>+{user.lake}</td>\r\n                                <td>{user.nertzPts} ({user.nertz})</td>\r\n                                <td>{user.scoreText}</td>\r\n                            </tr>\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div>\r\n                <p className=\"scoreboard-subtitle\">CURRENT LEADERBOARD</p>\r\n                <table className=\"scoreboard-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <td>PLAYER</td>\r\n                            <td>PREV</td>\r\n                            <td>GAME {props.gameCount}</td>\r\n                            <td>TOTAL</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {leaderboard.map((user,i) =>\r\n                            <tr key={i}>\r\n                                <td>{user.name}</td>\r\n                                <td>{user.prev}</td>\r\n                                <td>{user.update < 0 ? user.update : \"+\"+user.update}</td>\r\n                                <td>{user.total}</td>\r\n                            </tr>\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div id=\"scoreboard-ready-container\">\r\n                <div id=\"scoreboard-ready-button\" className={isReady ? \"ready\" : \"unready\"} onClick={() => handleReady()}>\r\n                    <p>{isReady ? \"CANCEL\" : \"READY\"}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import Popup from './Popup';\r\n\r\nexport default Popup;\r\n","import React from 'react';\r\nimport './Popup.css';\r\n\r\nexport default function Popup(props) {\r\n    return (\r\n        <div id=\"popup-backdrop\">\r\n            <div id=\"popup\">\r\n                <div id=\"popup-text\">\r\n                    <p>{props.text}</p>\r\n                </div>\r\n                <div id=\"popup-close\" onClick={() => props.handleClose()}>\r\n                    <p>OKAY</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport Login from './Login';\r\nimport Lobby from './Lobby';\r\nimport Countdown from './Countdown';\r\nimport Game from './Game';\r\nimport CPUGame from './CPUGame';\r\nimport Join from './Join';\r\nimport Scoreboard from './Scoreboard';\r\nimport Popup from './Popup';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        isJoined: false, // false\r\n        isLoggedIn: false, // false\r\n        isRunning: false, // false\r\n        isLocked: true, // true\r\n        isPaused: false, // false\r\n        numCPUs: 0,\r\n        CPUdiff: 1,\r\n        countdown: undefined,\r\n        countdownTimeout: [],\r\n        popup: false,\r\n        name: undefined,\r\n        users: [],\r\n        lake: [],\r\n        lastLake: 0,\r\n        lastNertz: 13,\r\n        lastCPULake: [],\r\n        lastCPUNertz: [],\r\n        scores: {},\r\n        scoreUpdate: {},\r\n        gameCount: 0\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        for(let timeout of this.state.countdownTimeout) {\r\n            clearTimeout(timeout);\r\n        }\r\n    }\r\n\r\n    endGame = () => {\r\n        const text = <><span>Nertz!</span><br /><br /><span>Click OKAY to view the results.</span></>;\r\n        let scoreUpdate = {};\r\n        scoreUpdate[this.state.name] = {\r\n            lake: this.state.lastLake,\r\n            nertz: this.state.lastNertz\r\n        };\r\n        for(let i=0; i<this.state.numCPUs; i++) {\r\n            const name = \"CPU \"+String(i);\r\n            scoreUpdate[name] = {\r\n                lake: this.state.lastCPULake[i],\r\n                nertz: this.state.lastCPUNertz[i]\r\n            };\r\n        }\r\n        let newScores1 = {...this.state.scores};\r\n        Object.keys(scoreUpdate).forEach((user, i) => {\r\n            newScores1[user] += Number(scoreUpdate[user].lake)-2*Number(scoreUpdate[user].nertz);\r\n        });\r\n        this.setState({\r\n            isLocked: true,\r\n            popup: text,\r\n            scoreUpdate: scoreUpdate,\r\n            scores: {...newScores1},\r\n            gameCount: this.state.gameCount+1\r\n        });\r\n    }\r\n\r\n    updateScore = (newValue) => {\r\n        this.setState({lastLake: newValue});\r\n    }\r\n\r\n    updateNertz = (newValue) => {\r\n        this.setState({lastNertz: newValue}, () => {\r\n            if(this.state.lastNertz === 0) {\r\n                this.endGame();\r\n            }\r\n        });\r\n    }\r\n\r\n    updateCPUScore = (id, newValue) => {\r\n        let newCPULake = this.state.lastCPULake;\r\n        newCPULake[id] = newValue;\r\n        this.setState({lastCPULake: newCPULake});\r\n    }\r\n\r\n    updateCPUNertz = (id, newValue) => {\r\n        let newCPUNertz = this.state.lastCPUNertz;\r\n        newCPUNertz[id] = newValue;\r\n        this.setState({lastCPUNertz: newCPUNertz}, () => {\r\n            for(let cpu of this.state.lastCPUNertz) {\r\n                if(cpu === 0) {\r\n                    this.endGame();\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    handleCreate = (numCPUs,diff) => {\r\n        let users = [];\r\n        let scores = {};\r\n        for(let i=0; i<numCPUs; i++) {\r\n            const name = \"CPU \"+String(i);\r\n            users.push(name);\r\n            scores[name] = 0;\r\n        }\r\n        this.setState({\r\n            numCPUs: numCPUs,\r\n            CPUdiff: diff,\r\n            users: [...users],\r\n            scores: {...scores},\r\n            isJoined: true\r\n        });\r\n    }\r\n\r\n    handleLogin = (name) => {\r\n        if(this.state.users.indexOf(name) === -1) {\r\n            let users = [...this.state.users];\r\n            const scores = {...this.state.scores};\r\n            users.push(name);\r\n            scores[name] = 0;\r\n            this.setState({\r\n                isLoggedIn: true,\r\n                name: name,\r\n                users: [...users],\r\n                scores: {...scores}\r\n            });\r\n        } else {\r\n            alert(\"That username is already taken. Please type another and join again.\");\r\n        }\r\n    }\r\n\r\n    handleReady = (isReady) => {\r\n        this.setState({isRunning: true, countdown: 5});\r\n        for(let i=4; i>-1; i--) {\r\n            const newTimeout = setTimeout(() => this.setState({\"countdown\":Number(i)}), 1000*(5-Number(i)) );\r\n            let timers = [...this.state.countdownTimeout];\r\n            timers.push(newTimeout);\r\n            this.setState({countdownTimeout: timers});\r\n        }\r\n        const newTimeout = setTimeout(() => {\r\n            //new game -> reset variables\r\n            const blank0Arr = Array.from(Array(Number(this.state.numCPUs)), () => 0);\r\n            const blank13Arr = Array.from(Array(Number(this.state.numCPUs)), () => 13);\r\n            this.setState({\r\n                isLocked: false,\r\n                countdown: undefined,\r\n                lake: [],\r\n                lastLake: 0,\r\n                lastNertz: 13,\r\n                readyUsers: [],\r\n                lastCPULake: [...blank0Arr],\r\n                lastCPUNertz: [...blank13Arr]\r\n            });\r\n        }, 4950);\r\n        let timers = [...this.state.countdownTimeout];\r\n        timers.push(newTimeout);\r\n        this.setState({countdownTimeout: timers});\r\n    }\r\n\r\n    newLake = (lake) => {\r\n        this.setState({lake: lake});\r\n    }\r\n\r\n    handlePause = (isPaused) => {\r\n        this.setState({ isPaused });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header name={this.state.name} />\r\n                {this.state.isJoined\r\n                    ? this.state.isLoggedIn\r\n                        ? this.state.isRunning\r\n                            ? this.state.isLocked\r\n                                ? this.state.countdown\r\n                                    ? <Countdown text={this.state.countdown} />\r\n                                    : <Scoreboard scoreUpdate={this.state.scoreUpdate} scores={this.state.scores} handleReady={this.handleReady} gameCount={this.state.gameCount} />\r\n                                : <>\r\n                                    <Game lake={this.state.lake} newLake={this.newLake} name={this.state.name} updateScore={this.updateScore} updateNertz={this.updateNertz} handlePause={this.handlePause} isPaused={this.state.isPaused} />\r\n                                    {[...Array(Number(this.state.numCPUs))].map((n,i) =>\r\n                                            <CPUGame id={i} key={i} get_lake={() => [...this.state.lake]} newLake={this.newLake} updateCPUScore={this.updateCPUScore} updateCPUNertz={this.updateCPUNertz} difficulty={this.state.CPUdiff} isPaused={this.state.isPaused} />\r\n                                     )}\r\n                                  </>\r\n                            : <Lobby handleReady={this.handleReady} users={this.state.users} />\r\n                        : <Login handleLogin={this.handleLogin} />\r\n                    : <Join handleCreate={this.handleCreate} throwPopup={(text) => this.setState({popup: text})} />\r\n                }\r\n                {this.state.popup\r\n                    ? <Popup text={this.state.popup} handleClose={() => this.setState({popup: false})} />\r\n                    : null\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}